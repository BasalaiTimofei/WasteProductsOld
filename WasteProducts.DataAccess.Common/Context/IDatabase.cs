using System;

namespace WasteProducts.DataAccess.Common.Context
{
    public interface IDatabase :IDisposable
    {
        /// <summary>
        /// Set this property to log the SQL generated by the <see cref="T:System.Data.Entity.DbContext" /> to the given
        /// delegate. For example, to log to the console, set this property to <see cref="M:System.Console.Write(System.String)" />.
        /// </summary>
        Action<string> Log { get; set; }

        /// <summary>
        /// Checks whether or not the database exists on the server.
        /// </summary>
        /// <returns> True if the database exists; false otherwise. </returns>
        bool IsDbExists { get; }

        /// <summary>
        /// Checks whether or not the database is compatible with the the current Code First model.
        /// </summary>
        /// /// <returns> True if the model hash in the context and the database match; false otherwise. </returns>
        bool IsDbCompatibleWithModel { get; }

        /// <summary>
        /// Deletes the database on the database server if it exists, otherwise does nothing.
        /// Calling this method from outside of an initializer will mark the database as having
        /// not been initialized. This means that if an attempt is made to use the database again
        /// after it has been deleted, then any initializer set will run again and, usually, will
        /// try to create the database again automatically.
        /// </summary>
        /// <returns> True if the database did exist and was deleted; false otherwise. </returns>
        bool DeleteDb();
    }
}